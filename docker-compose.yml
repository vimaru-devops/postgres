services:
  postgres-primary:
    image: postgres:17
    container_name: postgres-primary
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin123}
      POSTGRES_DB: ${POSTGRES_DB:-mydb}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    command: postgres -c wal_level=replica -c max_wal_senders=10 -c wal_keep_size=64
    volumes:
      - primary-data:/var/lib/postgresql/data
    networks:
      - postgres-net
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-replica1:
    image: postgres:17
    container_name: postgres-replica1
    user: postgres
    environment:
      PGUSER: ${REPLICA_USER:-admin}
      PGPASSWORD: ${REPLICA_PASSWORD:-admin123}
    command: >
      bash -c "
        rm -rf /var/lib/postgresql/data/* &&
        until pg_basebackup -h postgres-primary -D /var/lib/postgresql/data -U admin -Fp -Xs -P -R; do 
          echo '>>> Waiting for primary...'; 
          sleep 5; 
        done &&
        chmod 700 /var/lib/postgresql/data &&
        postgres"
    volumes:
      - replica1-data:/var/lib/postgresql/data
    networks:
      - postgres-net
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-replica2:
    image: postgres:17
    container_name: postgres-replica2
    user: postgres
    environment:
      PGUSER: ${REPLICA_USER:-admin}
      PGPASSWORD: ${REPLICA_PASSWORD:-admin123}
    command: >
      bash -c "
        rm -rf /var/lib/postgresql/data/* &&
        until pg_basebackup -h postgres-primary -D /var/lib/postgresql/data -U admin -Fp -Xs -P -R; do 
          echo '>>> Waiting for primary...'; 
          sleep 5; 
        done &&
        chmod 700 /var/lib/postgresql/data &&
        postgres"
    volumes:
      - replica2-data:/var/lib/postgresql/data
    networks:
      - postgres-net
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-replica3:
    image: postgres:17
    container_name: postgres-replica3
    user: postgres
    environment:
      PGUSER: ${REPLICA_USER:-admin}
      PGPASSWORD: ${REPLICA_PASSWORD:-admin123}
    command: >
      bash -c "
        rm -rf /var/lib/postgresql/data/* &&
        until pg_basebackup -h postgres-primary -D /var/lib/postgresql/data -U admin -Fp -Xs -P -R; do 
          echo '>>> Waiting for primary...'; 
          sleep 5; 
        done &&
        chmod 700 /var/lib/postgresql/data &&
        postgres"
    volumes:
      - replica3-data:/var/lib/postgresql/data
    networks:
      - postgres-net
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgpool:
    image: bitnami/pgpool:latest
    container_name: pgpool
    environment:
      - PGPOOL_BACKEND_NODES=0:postgres-primary:5432:1,1:postgres-replica1:5432:3,2:postgres-replica2:5432:3,3:postgres-replica3:5432:3
      - PGPOOL_SR_CHECK_USER=${PGPOOL_SR_CHECK_USER:-admin}
      - PGPOOL_SR_CHECK_PASSWORD=${PGPOOL_SR_CHECK_PASSWORD:-admin123}
      - PGPOOL_ENABLE_LOAD_BALANCING=yes
      - PGPOOL_LOAD_BALANCE_BY_SESSION=yes
      - PGPOOL_STATEMENT_LEVEL_LOAD_BALANCE=no
      - PGPOOL_DISABLE_LOAD_BALANCE_ON_WRITE=off
      - PGPOOL_POSTGRES_USERNAME=${PGPOOL_POSTGRES_USERNAME:-admin}
      - PGPOOL_POSTGRES_PASSWORD=${PGPOOL_POSTGRES_PASSWORD:-admin123}
      - PGPOOL_ADMIN_USERNAME=${PGPOOL_ADMIN_USERNAME:-admin}
      - PGPOOL_ADMIN_PASSWORD=${PGPOOL_ADMIN_PASSWORD:-admin123}
    ports:
      - "5433:5432"
    depends_on:
      postgres-primary:
        condition: service_healthy
      postgres-replica1:
        condition: service_healthy
      postgres-replica2:
        condition: service_healthy
      postgres-replica3:
        condition: service_healthy
    networks:
      - postgres-net
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=admin123 psql -U admin -h localhost -p 5432 -d mydb -c 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: pgbouncer
    environment:
      DB_USER: ${DB_USER:-admin}
      DB_PASSWORD: ${DB_PASSWORD:-admin123}
      DB_NAME: ${DB_NAME:-mydb}
      DB_HOST: ${DB_HOST:-pgpool}
      DB_PORT: ${DB_PORT:-5432}
      POOL_MODE: ${POOL_MODE:-transaction}
    ports:
      - "6432:6432"
    depends_on:
      pgpool:
        condition: service_healthy
    networks:
      - postgres-net
    command: >
      sh -c "
        echo '[databases]' > /etc/pgbouncer/pgbouncer.ini &&
        echo \"${DB_NAME:-mydb} = host=${DB_HOST:-pgpool} port=${DB_PORT:-5432} dbname=${DB_NAME:-mydb} user=${DB_USER:-admin} password=${DB_PASSWORD:-admin123}\" >> /etc/pgbouncer/pgbouncer.ini &&
        echo '[pgbouncer]' >> /etc/pgbouncer/pgbouncer.ini &&
        echo 'listen_addr = 0.0.0.0' >> /etc/pgbouncer/pgbouncer.ini &&
        echo 'listen_port = 6432' >> /etc/pgbouncer/pgbouncer.ini &&
        echo 'auth_type = trust' >> /etc/pgbouncer/pgbouncer.ini &&
        echo 'auth_file = /etc/pgbouncer/userlist.txt' >> /etc/pgbouncer/pgbouncer.ini &&
        echo \"pool_mode = ${POOL_MODE:-transaction}\" >> /etc/pgbouncer/pgbouncer.ini &&
        echo 'max_client_conn = 100' >> /etc/pgbouncer/pgbouncer.ini &&
        echo 'default_pool_size = 20' >> /etc/pgbouncer/pgbouncer.ini &&
        echo \"\\\"${DB_USER:-admin}\\\" \\\"${DB_PASSWORD:-admin123}\\\"\" > /etc/pgbouncer/userlist.txt &&
        exec pgbouncer /etc/pgbouncer/pgbouncer.ini"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -h localhost -p 6432"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  primary-data:
  replica1-data:
  replica2-data:
  replica3-data:

networks:
  postgres-net: